/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Aluno;
import modelo.Curso;
import dao.AlunoDAO;
import dao.CursoDAO;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.util.List;
import java.time.format.DateTimeFormatter;
import java.time.LocalDate;

/**
 *
 * @author CELSO
 */
public class JanelaAluno extends javax.swing.JFrame {

    private DefaultTableModel modeloTabela;
    private java.util.List<Curso> listaCursos;

    /**
     * Creates new form JanelaAluno
     */
    public JanelaAluno() {
        initComponents();
        modeloTabela = (DefaultTableModel) tblAlunos.getModel();
        preencherComboCursos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        N = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        E = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        cbCurso = new javax.swing.JComboBox<>();
        chkAtivo = new javax.swing.JCheckBox();
        bntSalvar = new javax.swing.JButton();
        bntExcluir = new javax.swing.JButton();
        bntLimpar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAlunos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JTextField();
        bntEditar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        N.setText("Nome");
        getContentPane().add(N, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        C.setText("Cpf");
        getContentPane().add(C, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        E.setText("Email");
        getContentPane().add(E, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 100, -1));
        getContentPane().add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 90, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 100, 20));

        cbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCursoActionPerformed(evt);
            }
        });
        getContentPane().add(cbCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        chkAtivo.setText("Ativo");
        chkAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAtivoActionPerformed(evt);
            }
        });
        getContentPane().add(chkAtivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, 20));

        bntSalvar.setText("Salvar");
        bntSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(bntSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        bntExcluir.setText("Excluir");
        bntExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(bntExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        bntLimpar.setText("Limpar");
        bntLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntLimparActionPerformed(evt);
            }
        });
        getContentPane().add(bntLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, -1));

        tblAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Cpf", "Email", "Data Nascimento", "Curso", "Ativo"
            }
        ));
        jScrollPane2.setViewportView(tblAlunos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 300, 130));

        jLabel1.setText("Data NAsc");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, -1));
        getContentPane().add(txtDataNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 100, -1));

        bntEditar.setText("Editar");
        bntEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditarActionPerformed(evt);
            }
        });
        getContentPane().add(bntEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCursoActionPerformed

    }//GEN-LAST:event_cbCursoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        cbCurso.removeAllItems();
        CursoDAO cursoDAO = new CursoDAO();
        for (Curso c : cursoDAO.getLista()) {
            cbCurso.addItem(c.getNome()); // <-- aqui está a mudança!
        }
        atualizarTabela();


    }//GEN-LAST:event_formWindowOpened

    private void chkAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAtivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAtivoActionPerformed

    private void bntSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalvarActionPerformed
        // TODO add your handling code here:
        try {
            String nome = txtNome.getText().trim();
            String cpf = txtCpf.getText().trim();
            String email = txtEmail.getText().trim();
            String dataNascStr = txtDataNascimento.getText().trim();
            boolean ativo = chkAtivo.isSelected();

            int indiceSelecionado = cbCurso.getSelectedIndex();
            if (indiceSelecionado == -1) {
                JOptionPane.showMessageDialog(this, "Selecione um curso!");
                return;
            }
            Curso cursoSelecionado = listaCursos.get(indiceSelecionado);

            if (nome.isEmpty() || cpf.isEmpty() || email.isEmpty() || dataNascStr.isEmpty() || cursoSelecionado == null) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
                return;
            }

            // Aqui o importante: o formato deve ser o mesmo usado ao editar!
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataNasc = LocalDate.parse(dataNascStr, formatter);

            Aluno aluno = new Aluno();
            aluno.setNome(nome);
            aluno.setCpf(cpf);
            aluno.setEmail(email);
            aluno.setDataNascimento(dataNasc);
            aluno.setAtivo(ativo);
            aluno.setCurso(cursoSelecionado);

            AlunoDAO alunoDAO = new AlunoDAO();
            alunoDAO.adiciona(aluno);

            JOptionPane.showMessageDialog(this, "Aluno cadastrado com sucesso!");
            limparCampos();
            atualizarTabela();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar aluno: " + ex.getMessage());
        }
    }//GEN-LAST:event_bntSalvarActionPerformed

    private void bntExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExcluirActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tblAlunos.getSelectedRow();
        if (linhaSelecionada != -1) {
            // Supondo que o ID está na primeira coluna da tabela
            int idAluno = (int) tblAlunos.getValueAt(linhaSelecionada, 0);

            int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o aluno selecionado?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    AlunoDAO alunoDAO = new AlunoDAO();
                    Aluno aluno = alunoDAO.buscaPorId(idAluno);
                    if (aluno != null) {
                        alunoDAO.remove(aluno);
                        JOptionPane.showMessageDialog(this, "Aluno excluído com sucesso!");
                        atualizarTabela(); // Atualize a tabela para refletir a exclusão
                    } else {
                        JOptionPane.showMessageDialog(this, "Aluno não encontrado no banco de dados.");
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Erro ao excluir aluno: " + ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.");
        }
    }//GEN-LAST:event_bntExcluirActionPerformed

    private void bntLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntLimparActionPerformed
        // TODO add your handling code here:
        limparCampos();

    }//GEN-LAST:event_bntLimparActionPerformed

    private void bntEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditarActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tblAlunos.getSelectedRow();
        if (linhaSelecionada != -1) {
            int idAluno = (int) tblAlunos.getValueAt(linhaSelecionada, 0);

            AlunoDAO alunoDAO = new AlunoDAO();
            Aluno aluno = alunoDAO.buscaPorId(idAluno);

            if (aluno != null) {
                // Preenche os campos com os dados do aluno
                txtNome.setText(aluno.getNome());
                txtCpf.setText(aluno.getCpf());
                txtEmail.setText(aluno.getEmail());
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                txtDataNascimento.setText(aluno.getDataNascimento().format(formatter));
                chkAtivo.setSelected(aluno.isAtivo());

                // Seleciona o curso correto no ComboBox
                for (int i = 0; i < listaCursos.size(); i++) {
                    if (listaCursos.get(i).getId() == aluno.getCurso().getId()) {
                        cbCurso.setSelectedIndex(i);
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Aluno não encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um aluno para editar.");
        }
    }//GEN-LAST:event_bntEditarActionPerformed

    private void limparCampos() {
        txtNome.setText("");
        txtCpf.setText("");
        txtEmail.setText("");
        txtDataNascimento.setText("");
        chkAtivo.setSelected(false); // ou true, se quiser deixar ativo por padrão
        cbCurso.setSelectedIndex(0); // seleciona o primeiro curso do comboBox, se for o caso
    }

    private void atualizarTabela() {
        DefaultTableModel model = (DefaultTableModel) tblAlunos.getModel();
        model.setRowCount(0);
        AlunoDAO alunoDAO = new AlunoDAO();
        for (Aluno a : alunoDAO.getLista()) {
            String nomeCurso = (a.getCurso() != null && a.getCurso().getId() > 0) ? buscarNomeCurso(a.getCurso().getId()) : "";
            model.addRow(new Object[]{
                a.getId(), a.getNome(), a.getCpf(), a.getEmail(), a.getDataNascimento(), nomeCurso, a.isAtivo() ? "Sim" : "Não"
            });
        }
    }

    private String buscarNomeCurso(int idCurso) {
        CursoDAO cursoDAO = new CursoDAO();
        Curso curso = cursoDAO.buscaPorId(idCurso);
        return curso != null ? curso.getNome() : "";
    }

    private void preencherComboCursos() {
        cbCurso.removeAllItems();
        listaCursos = new CursoDAO().getLista();
        for (Curso c : listaCursos) {
            cbCurso.addItem(c.getNome()); // Adiciona só o nome do curso!
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel C;
    private javax.swing.JLabel E;
    private javax.swing.JLabel N;
    private javax.swing.JButton bntEditar;
    private javax.swing.JButton bntExcluir;
    private javax.swing.JButton bntLimpar;
    private javax.swing.JButton bntSalvar;
    private javax.swing.JComboBox<String> cbCurso;
    private javax.swing.JCheckBox chkAtivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblAlunos;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDataNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
